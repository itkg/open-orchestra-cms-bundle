parameters:
    open_orchestra_model.validator.unique_node_order.class                   : OpenOrchestra\Backoffice\Validator\Constraints\UniqueNodeOrderValidator
    open_orchestra_model.validator.check_variable_route_pattern_in_menu.class: OpenOrchestra\Backoffice\Validator\Constraints\CheckVariableRoutePatternInMenuValidator
    open_orchestra_model.validator.trashitem_remove.class                    : OpenOrchestra\Backoffice\Validator\Constraints\TrashcanRemoveValidator
    open_orchestra_model.validator.boolean_condition.class                   : OpenOrchestra\Backoffice\Validator\Constraints\BooleanConditionValidator
    open_orchestra_model.validator.unique_main_alias.class                   : OpenOrchestra\Backoffice\Validator\Constraints\UniqueMainAliasValidator
    open_orchestra_model.validator.unique_redirection.class                  : OpenOrchestra\Backoffice\Validator\Constraints\UniqueRedirectionValidator
    open_orchestra_model.validator.unique_node_special_page.class            : OpenOrchestra\Backoffice\Validator\Constraints\UniqueNodeSpecialPageValidator
    open_orchestra_model.validator.unique_block_code.class                   : OpenOrchestra\Backoffice\Validator\Constraints\UniqueBlockCodeValidator
    open_orchestra_model.validator.unremovable_language.class                : OpenOrchestra\Backoffice\Validator\Constraints\UnremovableLanguageConditionValidator
    open_orchestra_model.validator.content_type_field.class                  : OpenOrchestra\Backoffice\Validator\Constraints\ContentTypeFieldValidator

services:
    open_orchestra_model.validator.unique_node_order:
        class: '%open_orchestra_model.validator.unique_node_order.class%'
        arguments:
            - '@open_orchestra_model.repository.node'
        tags:
            - { name: validator.constraint_validator, alias: unique_node_order}

    open_orchestra_model.validator.check_variable_route_pattern_in_menu:
        class: '%open_orchestra_model.validator.check_variable_route_pattern_in_menu.class%'
        tags:
            - { name: validator.constraint_validator, alias: check_variable_route_pattern_in_menu}

    open_orchestra_model.validator.trashitem_remove:
        class: '%open_orchestra_model.validator.trashitem_remove.class%'
        tags:
            - { name: validator.constraint_validator, alias: remove_date}

    open_orchestra_model.validator.boolean_condition:
        class: '%open_orchestra_model.validator.boolean_condition.class%'
        tags:
            - { name: validator.constraint_validator, alias: boolean_condition}

    open_orchestra_model.validator.unique_main_alias:
        class: '%open_orchestra_model.validator.unique_main_alias.class%'
        tags:
            - { name: validator.constraint_validator, alias: unique_main_alias}

    open_orchestra_model.validator.unique_redirection:
        class: '%open_orchestra_model.validator.unique_redirection.class%'
        arguments:
            - '@open_orchestra_model.repository.redirection'
        tags:
            - { name: validator.constraint_validator, alias: unique_redirection}

    open_orchestra_model.validator.unique_node_special_page:
        class: '%open_orchestra_model.validator.unique_node_special_page.class%'
        arguments:
            - '@open_orchestra_model.repository.node'
        tags:
            - { name: validator.constraint_validator, alias: unique_node_special_page}

    open_orchestra_model.validator.unique_block_code:
        class: '%open_orchestra_model.validator.unique_block_code.class%'
        arguments:
            - '@open_orchestra_model.repository.block'
        tags:
            - { name: validator.constraint_validator, alias: unique_block_code}

    open_orchestra_model.validator.unremovable_language:
        class: '%open_orchestra_model.validator.unremovable_language.class%'
        tags:
            - { name: validator.constraint_validator, alias: unremovable_language}

    open_orchestra_model.validator.content_type_field:
        class: '%open_orchestra_model.validator.content_type_field.class%'
        arguments:
            - '%open_orchestra_backoffice.disallowed_field_names%'
        tags:
            - { name: validator.constraint_validator, alias: content_type_field}
